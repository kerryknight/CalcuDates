CalcuDates Notes

Developer Notes:
-----------------------
* ensure Build Active Architecture flag for both main project and Pods project match

old dark blue color: R:13 G:93 B:187
new dark blue color: R:7 G:50 B:100   #073264
light blue color: R:172 G:210 B:252

logo@2x: 540x126
logo: 270x63


To Do:
-----------------------
- Add ability to change preferred date formats
- Allow to adjust precision level of individual difference types
- Add Appsbooster
- Add the rating system
- Make a Universal app
- redo auto layouts to fit all screen sizes
- fix bottom banner ad bar offset
- make bg iOS 7 styled blurry blue
- bottom banner view is unresponsive
- redo logo without shading?
- loaded banner graphics aren't sizing to view size
- add tooltips to calendar icons on first view
- only show fullscreen ads for iphone 4/4S 
- show both banner and fullscreen ads for iphone 5+

1. Re-read all AutoLayout and Storyboarding stuff for iOS
2. Read all new design stuff and NSText stuff for iOS 7
3. Get UI designed for iPhone with asset catalog
4. Get UI designed for iPad
5. Hook up UI parts
7. Add continuous integration to Mac OS X server
8. Add XCTest unit tests
9. Hook methods up to parts
10. Hook rev mob ads back up to UI
11. Turn crash reporting back on
12. Submit app through AppLauch? Top is $199?  https://applaunch.us/how-app-launch-works


3rd Party Code Used:
--------------------------
- CocoaLumberjack: https://github.com/robbiehanson/CocoaLumberjack
- MHDismissModalView: https://github.com/mariohahn/MHDismissModalView
- ReactiveCocoa: https://github.com/ReactiveCocoa/ReactiveCocoa



Snippets:
--------------------------------------------------------------------------
- to log ambiguous layout issue, hit Pause in debugger and then type:
po [[UIWindow keyWindow] _autolayoutTrace]

- use RAC for validations:
NSCharacterSet *charSet = [NSCharacterSet characterSetWithCharactersInString:@" "];
RACSignal *nameFieldValid = [RACSignal combineLatest:@[ self.usernameField.rac_textSignal, self.passwordField.rac_textSignal ]
 reduce:^(NSString *username, NSString *password) {
    return @((username.length > 0) && (password.length > 0) &&
            ([username rangeOfCharacterFromSet:charSet].location == NSNotFound));
 }];

